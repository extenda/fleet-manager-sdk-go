// Code generated by go-swagger; DO NOT EDIT.

package software_package

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "fleet-manager-sdk-go/fleetmanager/models"
)

// GetSoftwarePackageReader is a Reader for the GetSoftwarePackage structure.
type GetSoftwarePackageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSoftwarePackageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSoftwarePackageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSoftwarePackageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSoftwarePackageOK creates a GetSoftwarePackageOK with default headers values
func NewGetSoftwarePackageOK() *GetSoftwarePackageOK {
	return &GetSoftwarePackageOK{}
}

/*GetSoftwarePackageOK handles this case with default header values.

OK
*/
type GetSoftwarePackageOK struct {
	Payload *models.SoftwarePackages
}

func (o *GetSoftwarePackageOK) Error() string {
	return fmt.Sprintf("[GET /software/package][%d] getSoftwarePackageOK  %+v", 200, o.Payload)
}

func (o *GetSoftwarePackageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SoftwarePackages)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSoftwarePackageBadRequest creates a GetSoftwarePackageBadRequest with default headers values
func NewGetSoftwarePackageBadRequest() *GetSoftwarePackageBadRequest {
	return &GetSoftwarePackageBadRequest{}
}

/*GetSoftwarePackageBadRequest handles this case with default header values.

Bad Request
*/
type GetSoftwarePackageBadRequest struct {
	Payload *models.Error
}

func (o *GetSoftwarePackageBadRequest) Error() string {
	return fmt.Sprintf("[GET /software/package][%d] getSoftwarePackageBadRequest  %+v", 400, o.Payload)
}

func (o *GetSoftwarePackageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
