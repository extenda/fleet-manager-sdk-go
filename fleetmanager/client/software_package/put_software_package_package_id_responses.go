// Code generated by go-swagger; DO NOT EDIT.

package software_package

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// PutSoftwarePackagePackageIDReader is a Reader for the PutSoftwarePackagePackageID structure.
type PutSoftwarePackagePackageIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSoftwarePackagePackageIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPutSoftwarePackagePackageIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutSoftwarePackagePackageIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutSoftwarePackagePackageIDNoContent creates a PutSoftwarePackagePackageIDNoContent with default headers values
func NewPutSoftwarePackagePackageIDNoContent() *PutSoftwarePackagePackageIDNoContent {
	return &PutSoftwarePackagePackageIDNoContent{}
}

/*PutSoftwarePackagePackageIDNoContent handles this case with default header values.

No Content
*/
type PutSoftwarePackagePackageIDNoContent struct {
}

func (o *PutSoftwarePackagePackageIDNoContent) Error() string {
	return fmt.Sprintf("[PUT /software/package/{packageId}][%d] putSoftwarePackagePackageIdNoContent ", 204)
}

func (o *PutSoftwarePackagePackageIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSoftwarePackagePackageIDBadRequest creates a PutSoftwarePackagePackageIDBadRequest with default headers values
func NewPutSoftwarePackagePackageIDBadRequest() *PutSoftwarePackagePackageIDBadRequest {
	return &PutSoftwarePackagePackageIDBadRequest{}
}

/*PutSoftwarePackagePackageIDBadRequest handles this case with default header values.

Bad Request
*/
type PutSoftwarePackagePackageIDBadRequest struct {
	Payload *models.Error
}

func (o *PutSoftwarePackagePackageIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /software/package/{packageId}][%d] putSoftwarePackagePackageIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutSoftwarePackagePackageIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
