// Code generated by go-swagger; DO NOT EDIT.

package fleet_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "fleet-manager-sdk-go/fleetmanager/models"
)

// GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDReader is a Reader for the GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreID structure.
type GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDOK creates a GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDOK with default headers values
func NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDOK() *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDOK {
	return &GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDOK{}
}

/*GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDOK handles this case with default header values.

OK
*/
type GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDOK struct {
	Payload *models.FleetStore
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDOK) Error() string {
	return fmt.Sprintf("[GET /fleet/tenant/{tenantId}/brand/{brandId}/country/{countryId}/store/{storeId}][%d] getFleetTenantTenantIdBrandBrandIdCountryCountryIdStoreStoreIdOK  %+v", 200, o.Payload)
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FleetStore)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDBadRequest creates a GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDBadRequest with default headers values
func NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDBadRequest() *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDBadRequest {
	return &GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDBadRequest{}
}

/*GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDBadRequest handles this case with default header values.

Bad Request
*/
type GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDBadRequest struct {
	Payload *models.Error
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /fleet/tenant/{tenantId}/brand/{brandId}/country/{countryId}/store/{storeId}][%d] getFleetTenantTenantIdBrandBrandIdCountryCountryIdStoreStoreIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDNotFound creates a GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDNotFound with default headers values
func NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDNotFound() *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDNotFound {
	return &GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDNotFound{}
}

/*GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDNotFound handles this case with default header values.

Not Found
*/
type GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDNotFound struct {
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDNotFound) Error() string {
	return fmt.Sprintf("[GET /fleet/tenant/{tenantId}/brand/{brandId}/country/{countryId}/store/{storeId}][%d] getFleetTenantTenantIdBrandBrandIdCountryCountryIdStoreStoreIdNotFound ", 404)
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
