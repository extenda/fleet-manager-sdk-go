// Code generated by go-swagger; DO NOT EDIT.

package fleet_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "fleet-manager-sdk-go/fleetmanager/models"
)

// NewPutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams creates a new PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams object
// with the default values initialized.
func NewPutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams() *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	var ()
	return &PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParamsWithTimeout creates a new PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParamsWithTimeout(timeout time.Duration) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	var ()
	return &PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams{

		timeout: timeout,
	}
}

// NewPutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParamsWithContext creates a new PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParamsWithContext(ctx context.Context) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	var ()
	return &PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams{

		Context: ctx,
	}
}

// NewPutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParamsWithHTTPClient creates a new PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParamsWithHTTPClient(client *http.Client) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	var ()
	return &PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams{
		HTTPClient: client,
	}
}

/*PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams contains all the parameters to send to the API endpoint
for the put fleet tenant tenant ID brand brand ID country country ID store store ID operation typically these are written to a http.Request
*/
type PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams struct {

	/*Body*/
	Body *models.UpdateFleetStore
	/*BrandID*/
	BrandID string
	/*CountryID*/
	CountryID string
	/*StoreID*/
	StoreID string
	/*TenantID*/
	TenantID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) WithTimeout(timeout time.Duration) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) WithContext(ctx context.Context) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) WithHTTPClient(client *http.Client) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) WithBody(body *models.UpdateFleetStore) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) SetBody(body *models.UpdateFleetStore) {
	o.Body = body
}

// WithBrandID adds the brandID to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) WithBrandID(brandID string) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	o.SetBrandID(brandID)
	return o
}

// SetBrandID adds the brandId to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) SetBrandID(brandID string) {
	o.BrandID = brandID
}

// WithCountryID adds the countryID to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) WithCountryID(countryID string) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	o.SetCountryID(countryID)
	return o
}

// SetCountryID adds the countryId to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) SetCountryID(countryID string) {
	o.CountryID = countryID
}

// WithStoreID adds the storeID to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) WithStoreID(storeID string) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	o.SetStoreID(storeID)
	return o
}

// SetStoreID adds the storeId to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) SetStoreID(storeID string) {
	o.StoreID = storeID
}

// WithTenantID adds the tenantID to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) WithTenantID(tenantID string) *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams {
	o.SetTenantID(tenantID)
	return o
}

// SetTenantID adds the tenantId to the put fleet tenant tenant ID brand brand ID country country ID store store ID params
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) SetTenantID(tenantID string) {
	o.TenantID = tenantID
}

// WriteToRequest writes these params to a swagger request
func (o *PutFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param brandId
	if err := r.SetPathParam("brandId", o.BrandID); err != nil {
		return err
	}

	// path param countryId
	if err := r.SetPathParam("countryId", o.CountryID); err != nil {
		return err
	}

	// path param storeId
	if err := r.SetPathParam("storeId", o.StoreID); err != nil {
		return err
	}

	// path param tenantId
	if err := r.SetPathParam("tenantId", o.TenantID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
