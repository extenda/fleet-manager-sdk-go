// Code generated by go-swagger; DO NOT EDIT.

package fleet_hardware_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDReader is a Reader for the DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileID structure.
type DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDNoContent creates a DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDNoContent with default headers values
func NewDeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDNoContent() *DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDNoContent {
	return &DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDNoContent{}
}

/*DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDNoContent handles this case with default header values.

No Content
*/
type DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDNoContent struct {
}

func (o *DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /fleet/tenant/{tenantId}/brand/{brandId}/hardwareprofile/{hardwareProfileId}][%d] deleteFleetTenantTenantIdBrandBrandIdHardwareprofileHardwareProfileIdNoContent ", 204)
}

func (o *DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDBadRequest creates a DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDBadRequest with default headers values
func NewDeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDBadRequest() *DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDBadRequest {
	return &DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDBadRequest{}
}

/*DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDBadRequest handles this case with default header values.

Bad Request
*/
type DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDBadRequest struct {
	Payload *models.Error
}

func (o *DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /fleet/tenant/{tenantId}/brand/{brandId}/hardwareprofile/{hardwareProfileId}][%d] deleteFleetTenantTenantIdBrandBrandIdHardwareprofileHardwareProfileIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteFleetTenantTenantIDBrandBrandIDHardwareprofileHardwareProfileIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
