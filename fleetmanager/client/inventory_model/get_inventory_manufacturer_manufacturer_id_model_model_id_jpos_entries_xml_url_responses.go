// Code generated by go-swagger; DO NOT EDIT.

package inventory_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLReader is a Reader for the GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURL structure.
type GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLOK creates a GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLOK with default headers values
func NewGetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLOK() *GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLOK {
	return &GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLOK{}
}

/*GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLOK handles this case with default header values.

OK
*/
type GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLOK struct {
	Payload *models.S3PresignedPost
}

func (o *GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLOK) Error() string {
	return fmt.Sprintf("[GET /inventory/manufacturer/{manufacturerId}/model/{modelId}/jposEntriesXmlUrl][%d] getInventoryManufacturerManufacturerIdModelModelIdJposEntriesXmlUrlOK  %+v", 200, o.Payload)
}

func (o *GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.S3PresignedPost)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLBadRequest creates a GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLBadRequest with default headers values
func NewGetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLBadRequest() *GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLBadRequest {
	return &GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLBadRequest{}
}

/*GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLBadRequest handles this case with default header values.

Bad Request
*/
type GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLBadRequest struct {
	Payload *models.Error
}

func (o *GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLBadRequest) Error() string {
	return fmt.Sprintf("[GET /inventory/manufacturer/{manufacturerId}/model/{modelId}/jposEntriesXmlUrl][%d] getInventoryManufacturerManufacturerIdModelModelIdJposEntriesXmlUrlBadRequest  %+v", 400, o.Payload)
}

func (o *GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLNotFound creates a GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLNotFound with default headers values
func NewGetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLNotFound() *GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLNotFound {
	return &GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLNotFound{}
}

/*GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLNotFound handles this case with default header values.

Not Found
*/
type GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLNotFound struct {
}

func (o *GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLNotFound) Error() string {
	return fmt.Sprintf("[GET /inventory/manufacturer/{manufacturerId}/model/{modelId}/jposEntriesXmlUrl][%d] getInventoryManufacturerManufacturerIdModelModelIdJposEntriesXmlUrlNotFound ", 404)
}

func (o *GetInventoryManufacturerManufacturerIDModelModelIDJposEntriesXMLURLNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
