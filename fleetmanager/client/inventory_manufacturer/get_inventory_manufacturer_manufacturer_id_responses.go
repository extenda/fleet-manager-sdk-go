// Code generated by go-swagger; DO NOT EDIT.

package inventory_manufacturer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// GetInventoryManufacturerManufacturerIDReader is a Reader for the GetInventoryManufacturerManufacturerID structure.
type GetInventoryManufacturerManufacturerIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInventoryManufacturerManufacturerIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInventoryManufacturerManufacturerIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInventoryManufacturerManufacturerIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInventoryManufacturerManufacturerIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInventoryManufacturerManufacturerIDOK creates a GetInventoryManufacturerManufacturerIDOK with default headers values
func NewGetInventoryManufacturerManufacturerIDOK() *GetInventoryManufacturerManufacturerIDOK {
	return &GetInventoryManufacturerManufacturerIDOK{}
}

/*GetInventoryManufacturerManufacturerIDOK handles this case with default header values.

OK
*/
type GetInventoryManufacturerManufacturerIDOK struct {
	Payload *models.InventoryManufacturer
}

func (o *GetInventoryManufacturerManufacturerIDOK) Error() string {
	return fmt.Sprintf("[GET /inventory/manufacturer/{manufacturerId}][%d] getInventoryManufacturerManufacturerIdOK  %+v", 200, o.Payload)
}

func (o *GetInventoryManufacturerManufacturerIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InventoryManufacturer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryManufacturerManufacturerIDBadRequest creates a GetInventoryManufacturerManufacturerIDBadRequest with default headers values
func NewGetInventoryManufacturerManufacturerIDBadRequest() *GetInventoryManufacturerManufacturerIDBadRequest {
	return &GetInventoryManufacturerManufacturerIDBadRequest{}
}

/*GetInventoryManufacturerManufacturerIDBadRequest handles this case with default header values.

Bad Request
*/
type GetInventoryManufacturerManufacturerIDBadRequest struct {
	Payload *models.Error
}

func (o *GetInventoryManufacturerManufacturerIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /inventory/manufacturer/{manufacturerId}][%d] getInventoryManufacturerManufacturerIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetInventoryManufacturerManufacturerIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryManufacturerManufacturerIDNotFound creates a GetInventoryManufacturerManufacturerIDNotFound with default headers values
func NewGetInventoryManufacturerManufacturerIDNotFound() *GetInventoryManufacturerManufacturerIDNotFound {
	return &GetInventoryManufacturerManufacturerIDNotFound{}
}

/*GetInventoryManufacturerManufacturerIDNotFound handles this case with default header values.

Not Found
*/
type GetInventoryManufacturerManufacturerIDNotFound struct {
}

func (o *GetInventoryManufacturerManufacturerIDNotFound) Error() string {
	return fmt.Sprintf("[GET /inventory/manufacturer/{manufacturerId}][%d] getInventoryManufacturerManufacturerIdNotFound ", 404)
}

func (o *GetInventoryManufacturerManufacturerIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
