// Code generated by go-swagger; DO NOT EDIT.

package software_version

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// GetSoftwarePackagePackageIDVersionReader is a Reader for the GetSoftwarePackagePackageIDVersion structure.
type GetSoftwarePackagePackageIDVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSoftwarePackagePackageIDVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSoftwarePackagePackageIDVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSoftwarePackagePackageIDVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSoftwarePackagePackageIDVersionOK creates a GetSoftwarePackagePackageIDVersionOK with default headers values
func NewGetSoftwarePackagePackageIDVersionOK() *GetSoftwarePackagePackageIDVersionOK {
	return &GetSoftwarePackagePackageIDVersionOK{}
}

/*GetSoftwarePackagePackageIDVersionOK handles this case with default header values.

OK
*/
type GetSoftwarePackagePackageIDVersionOK struct {
	Payload *models.SoftwareVersions
}

func (o *GetSoftwarePackagePackageIDVersionOK) Error() string {
	return fmt.Sprintf("[GET /software/package/{packageId}/version][%d] getSoftwarePackagePackageIdVersionOK  %+v", 200, o.Payload)
}

func (o *GetSoftwarePackagePackageIDVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SoftwareVersions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSoftwarePackagePackageIDVersionBadRequest creates a GetSoftwarePackagePackageIDVersionBadRequest with default headers values
func NewGetSoftwarePackagePackageIDVersionBadRequest() *GetSoftwarePackagePackageIDVersionBadRequest {
	return &GetSoftwarePackagePackageIDVersionBadRequest{}
}

/*GetSoftwarePackagePackageIDVersionBadRequest handles this case with default header values.

Bad Request
*/
type GetSoftwarePackagePackageIDVersionBadRequest struct {
	Payload *models.Error
}

func (o *GetSoftwarePackagePackageIDVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /software/package/{packageId}/version][%d] getSoftwarePackagePackageIdVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetSoftwarePackagePackageIDVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
