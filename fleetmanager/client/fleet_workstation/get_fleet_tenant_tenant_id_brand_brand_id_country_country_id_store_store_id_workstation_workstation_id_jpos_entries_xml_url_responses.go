// Code generated by go-swagger; DO NOT EDIT.

package fleet_workstation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLReader is a Reader for the GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURL structure.
type GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLOK creates a GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLOK with default headers values
func NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLOK() *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLOK {
	return &GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLOK{}
}

/*GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLOK handles this case with default header values.

OK
*/
type GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLOK struct {
	Payload *models.S3PresignedPost
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLOK) Error() string {
	return fmt.Sprintf("[GET /fleet/tenant/{tenantId}/brand/{brandId}/country/{countryId}/store/{storeId}/workstation/{workstationId}/jposEntriesXmlUrl][%d] getFleetTenantTenantIdBrandBrandIdCountryCountryIdStoreStoreIdWorkstationWorkstationIdJposEntriesXmlUrlOK  %+v", 200, o.Payload)
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.S3PresignedPost)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLBadRequest creates a GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLBadRequest with default headers values
func NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLBadRequest() *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLBadRequest {
	return &GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLBadRequest{}
}

/*GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLBadRequest handles this case with default header values.

Bad Request
*/
type GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLBadRequest struct {
	Payload *models.Error
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLBadRequest) Error() string {
	return fmt.Sprintf("[GET /fleet/tenant/{tenantId}/brand/{brandId}/country/{countryId}/store/{storeId}/workstation/{workstationId}/jposEntriesXmlUrl][%d] getFleetTenantTenantIdBrandBrandIdCountryCountryIdStoreStoreIdWorkstationWorkstationIdJposEntriesXmlUrlBadRequest  %+v", 400, o.Payload)
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLNotFound creates a GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLNotFound with default headers values
func NewGetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLNotFound() *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLNotFound {
	return &GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLNotFound{}
}

/*GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLNotFound handles this case with default header values.

Not Found
*/
type GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLNotFound struct {
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLNotFound) Error() string {
	return fmt.Sprintf("[GET /fleet/tenant/{tenantId}/brand/{brandId}/country/{countryId}/store/{storeId}/workstation/{workstationId}/jposEntriesXmlUrl][%d] getFleetTenantTenantIdBrandBrandIdCountryCountryIdStoreStoreIdWorkstationWorkstationIdJposEntriesXmlUrlNotFound ", 404)
}

func (o *GetFleetTenantTenantIDBrandBrandIDCountryCountryIDStoreStoreIDWorkstationWorkstationIDJposEntriesXMLURLNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
